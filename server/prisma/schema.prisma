// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Ingredient {
  id                Int      @id @default(autoincrement())
  name              String   @unique
  type              String
  unit              String
  quantity          Float
  lowStockThreshold Float
  lastImportDate    DateTime
  notes             String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  batchIngredients  BatchIngredient[]
  recipeIngredients RecipeIngredient[]
}

enum Status {
  boiling
  fermenting
  cold_crashing
  done
}

model Batch {
  id        Int      @id @default(autoincrement())
  code      String   @unique
  beerName  String
  status    Status
  volume    Float
  notes     String?
  recipeId  Int? // liên kết công thức (optional)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  recipe           Recipe?           @relation(fields: [recipeId], references: [id])
  batchIngredients BatchIngredient[]
}

model BatchIngredient {
  id           Int   @id @default(autoincrement())
  batchId      Int
  ingredientId Int
  amountUsed   Float

  batch      Batch      @relation(fields: [batchId], references: [id])
  ingredient Ingredient @relation(fields: [ingredientId], references: [id])
}

model Recipe {
  id           Int      @id @default(autoincrement())
  name         String   @unique
  description  String?
  note         String?
  instructions String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  recipeIngredients RecipeIngredient[]
  batches           Batch[]
}

model RecipeIngredient {
  id           Int   @id @default(autoincrement())
  recipeId     Int
  ingredientId Int
  amountNeeded Float

  recipe     Recipe     @relation(fields: [recipeId], references: [id])
  ingredient Ingredient @relation(fields: [ingredientId], references: [id])
}

model ActivityLog {
  id          Int      @id @default(autoincrement())
  action      String
  entity      String
  entityId    Int
  description String
  timestamp   DateTime @default(now())
  userId      Int? // tuỳ chọn nếu bạn có bảng User
}

model Type {
  id       Int    @id @default(autoincrement())
  typeName String @unique
}
